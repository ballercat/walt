!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e.Walt=e.Walt||{})}(this,function(exports){"use strict";function createCommonjsModule(e,t){return t={exports:{}},e(t,t.exports),t.exports}function walker(e){const t=(n,r=(()=>{}))=>{if(null==n)return;const{params:i}=n,a=i.length;"*"in e&&"function"==typeof e["*"]&&e["*"](n,r),n.Type in e&&"function"==typeof e[n.Type]&&e[n.Type](n,r);for(let e=0;e<a;e++){const r=e;t(i[e],e=>{n.params=[...i.slice(0,r),e,...i.slice(r+1)]})}};return t}function mapNode(e){const t=n=>{if(null==n)return n;const r="*"in e&&"function"==typeof e["*"]?e["*"](n):n.Type in e&&"function"==typeof e[n.Type]?e[n.Type](n):n,i=r.params.map(t);return _extends({},r,{params:i})};return t}function patchTypeCasts(e){return mapNode({[Syntax_1.Pair]:e=>{const{params:[t,n]}=e,{type:r}=t,{value:i}=n;return n.Type===Syntax_1.Type&&r&&i?_extends({},e,{type:i,value:t.value,Type:Syntax_1.TypeCast,meta:[...e.meta,typeCast({to:i,from:r})],params:[t]}):e}})(e)}function binary(e,t,n){const r=e.startNode(n[0]);r.value=t.value,r.params=n;let i=Syntax_1.BinaryExpression;if("="===r.value)i=Syntax_1.Assignment;else if("-="===r.value||"+="===r.value){i=Syntax_1.Assignment;const n=r.value[0];r.value="=",r.params=[r.params[0],binary(e,_extends({},t,{value:n}),[r.params[0],r.params[1]])]}else{if("["===r.value)return subscriptFromNode(e,r,getMetaType(e,n[0]));":"===r.value&&(i=Syntax_1.Pair)}return patchUnaryExpression(balanceTypesInMathExpression(e.endNode(r,i)))}function objectLiteral(e,t,n){const r=e.startNode(t);return r.params=n,e.endNode(r,Syntax_1.ObjectLiteral)}function parseConstant(e){const t=e.startNode(),n=e.token.value,r=-1!==n.toString().indexOf(".")?"f32":"i32";return e.endNode(_extends({},t,{type:r,value:n}),Syntax_1.Constant)}function stringLiteral(e){const t=e.startNode();return t.value=e.token.value.substring(1,e.token.value.length-1),e.endNode(t,Syntax_1.StringLiteral)}function builtInType(e){return e.makeNode({value:e.token.value,type:e.token.value},Syntax_1.Type)}function generateType(e){invariant_1("string"==typeof e.id,`Generator: A type must have a valid string identifier, node: ${JSON.stringify(e)}`);const t=e.params[0];invariant_1(t&&t.Type===Syntax_1.BinaryExpression,`Generator: A function type must be of form (<type>, ...) => <type> node: ${printNode(e)}`);const n=[];let r=null;const i=t.params[0],a=t.params[1];return null!=a&&walker({[Syntax_1.Type]:({value:e})=>n.push(getType$1(e))})(i),walker({[Syntax_1.Type]:({value:e})=>{r="void"!==e?getType$1(e):null}})(a||i),{id:e.id,params:n,result:r}}function generateNoop(){return[]}function breakParser(e){const t=e.startNode();return e.expect(["break"]),e.endNode(t,Syntax_1.Break)}function typeParser(e){const t=e.startNode();e.eat(["type"]),t.id=e.expect(null,Syntax_1.Identifier).value,e.expect(["="]);const n="{"===e.token.value;if(t.params=[expression(e)],n){const[n,r,i]=getByteOffsetsAndSize(t.params[0]);t.meta.push(objectType(n)),t.meta.push(objectSize(r)),t.meta.push(objectKeyTypes(i)),e.userTypes.push(t)}return hoistTypeMaybe(e,t),e.endNode(t,Syntax_1.Typedef)}function sizeof(e){const t=e.startNode();e.eat(["sizeof"]),e.eat(["("]);const n=findLocalIndex(e,e.token),r=findGlobalIndex(e,e.token);let i=null;if(null==(i=n>-1?e.func.locals[n]:e.globals[r]))throw e.syntaxError(`Undefined variable ${e.token.value}`);return t.value=variableSize(i),t.type="i32",e.eat([")"]),e.endNode(t,Syntax_1.Constant)}function maybeAssignment(e){if("["===e.stream.peek().value)return memoryStore(e);const t=maybeIdentifier(e);return t.Type===Syntax_1.FunctionCall?t:expression(e)}function write(){return(new OutputStream).push(index_12,MAGIC,`\\0asm`).push(index_12,VERSION,`version ${VERSION}`)}function emitString(e,t,n="string length"){e.push(varuint32,t.length,n);for(let n=0;n<t.length;n++)e.push(index_9,t.charCodeAt(n),t[n]);return e}function emit(e={}){return(new OutputStream).write(write()).write(section.type(e)).write(section.imports(e)).write(section.function(e)).write(section.memory(e)).write(section.globals(e)).write(section.exports(e)).write(section.element(e)).write(section.code(e))}class Stream{constructor(e=""){this.pos=this.line=this.col=0,this.input=e,this.lines=e.split("\n"),this.newLine()}die(e){throw new Error(e)}peek(){return this.input.charAt(this.pos)}next(){const e=this.input.charAt(this.pos++);return Stream.eol(e)?this.newLine():this.col++,e}newLine(){this.line++,this.col=0}static eol(e){return"\n"===e}static eof(e){return""===e}static whitespace(e){return"\n"===e||" "===e||"\t"===e||"\v"===e||"\r"===e||"\f"===e}}var trie$1=createCommonjsModule(function(e){const t=e=>{const n=n=>e&&e.children[n]?t(e.children[n]):null;return n.leaf=e.leaf,n};class n{constructor(e){this.root={char:"",children:{},leaf:!1},e.map(e=>this.add(e)),this.fsearch=t(this.root)}add(e){let t=this.root,n=e.slice(0,1);for(e=e.slice(1);void 0!==t.children[n]&&n.length>0;)t=t.children[n],n=e.slice(0,1),e=e.slice(1);for(;n.length>0;){const r={char:n,children:{},leaf:!1};t.children[n]=r,t=r,n=e.slice(0,1),e=e.slice(1)}t.leaf=!0}}e.exports=n}),token=createCommonjsModule(function(e){const t=(e,n,r)=>{const i=i=>{const a=e(i);return"function"==typeof a?t(a,n,r):a};return i.type=n,i.supported=r,i.strict=!!r,i.leaf=e.leaf,i};e.exports=t});const Syntax={Keyword:"Keyword",Export:"Export",Import:"Import",Statement:"Statement",IfThenElse:"IfThenElse",UnaryExpression:"UnaryExpression",BinaryExpression:"BinaryExpression",TernaryExpression:"TernaryExpression",NumberLiteral:"NumberLiteral",StringLiteral:"StringLiteral",Punctuator:"Punctuator",Identifier:"Identifier",ArraySubscript:"ArraySubscript",Constant:"Constant",Type:"Type",Declaration:"Declaration",FunctionDeclaration:"FunctionDeclaration",ArrayDeclaration:"ArrayDeclaration",IndirectFunctionCall:"IndirectFunctionCall",FunctionCall:"FunctionCall",Loop:"Loop",Program:"Program",MemoryAssignment:"MemoryAssignment",Assignment:"Assignment",Param:"Param",Typedef:"Typedef",ReturnStatement:"ReturnStatement",Sequence:"Sequence",ObjectLiteral:"ObjectLiteral",Pair:"Pair",TypeCast:"TypeCast",UnaryExpression:"UnaryExpression",Break:"Break",Noop:"Noop",FunctionIndex:"FunctionIndex",FunctionIdentifier:"FunctionIdentifier",FunctionPointer:"FunctionPointer"};var Syntax_1=Syntax;const supported=["+","++","-","--","=","==","+=","-=","=>","<=","!=","%","/","^","&","|","!","**",":","(",")",".","{","}",",","[","]",";",">","<","?"],trie=new trie$1(supported);var index=token(trie.fsearch,Syntax_1.Punctuator,supported),index$1=createCommonjsModule(function(e){const{isNaN:t,parseInt:n}=Number,r=e=>!t(n(e)),i=e=>"."===e,a=e=>r(e)?a:null,o=e=>i(e)?a:r(e)?o:null;e.exports=token(e=>i(e)?a:r(e)?o:null,Syntax_1.Constant)});const quoteOK=e=>()=>e,nextFails=()=>null,endsInSingleQuote=e=>"\\"===e?quoteOK(endsInSingleQuote):"'"===e?nextFails:endsInSingleQuote,endsInDoubleQuote=e=>"\\"===e?quoteOK(endsInDoubleQuote):'"'===e?nextFails:endsInDoubleQuote,maybeQuote=e=>"'"===e?endsInSingleQuote:'"'===e?endsInDoubleQuote:null,stringParser=token(maybeQuote,Syntax_1.StringLiteral),parse=e=>stringParser(e)||index(e)||index$1(e)||" "===e?null:parse,tokenParser=token(parse,Syntax_1.Identifier),supported$1=["break","if","else","import","from","export","return","switch","case","default","const","let","for","continue","do","while","function","global","module","table","type","invoke","assert","assert_return","sizeof"],trie$2=new trie$1(supported$1),root=trie$2.fsearch;var keyword=token(root,Syntax_1.Keyword,supported$1);const everything=()=>everything,slash=e=>{if("/"===e)return everything},maybeComment=e=>"/"===e?slash:null,commentParser=token(maybeComment,Syntax_1.Comment),supported$2=["i32","i64","f32","f64","Function","Memory","void"],trie$3=new trie$1(supported$2);var index$2=token(trie$3.fsearch,Syntax_1.Type,supported$2);class Tokenizer{constructor(e,t=[index,index$1,tokenParser,keyword,stringParser,index$2,commentParser]){e instanceof Stream||this.die(`Tokenizer expected instance of Stream in constructor.\n                Instead received ${JSON.stringify(e)}`),this.stream=e,this.tokens=[],this.pos=0,this.parsers=t}next(){let e="";this.seekNonWhitespace();let t,n,r=this.parsers,i=this.match(t,r),a={line:this.stream.line,col:this.stream.col};do{t=this.stream.peek(),r=this.match(t,r),e+=t,this.stream.next(),n=this.stream.peek(),i=this.match(n,r)}while(!Stream.eol(n)&&!Stream.eof(n)&&i.length>0);if(Stream.eof(e))return null;const o=this.token(e,r);return o.start=a,o.end={line:this.stream.line,col:this.stream.col},o.type!==commentParser.type&&this.tokens.push(o),this.tokens[this.pos++]}match(e,t){return null==e?t:t.map(t=>t(e)).filter(e=>e)}token(e,t,n={type:"unknown",value:e}){return t.length>1&&(t=t.filter(e=>!e.strict||e.leaf)).length>1&&(t=t.filter(e=>e.strict)),1===t.length&&(n.type=t[0].type),n}seekNonWhitespace(){for(;this.stream.peek()&&Stream.whitespace(this.stream.peek());)this.stream.next()}parse(){for(;!Stream.eof(this.stream.peek());)this.next();return this.tokens}die(e){throw new Error(e)}}var index$3=createCommonjsModule(function(e){const t={[1]:4,[2]:8,[4]:4,[8]:8,[2048]:4,[1024]:2,[256]:1,[128]:1,[512]:2,[16]:4,[32]:4,[64]:4};e.exports={i32:1,i64:2,f32:4,f64:8,anyfunc:16,func:32,block_type:64,i8:128,u8:256,i16:512,u16:1024,u32:2048,u64:4096,set:(e,t,n,r)=>{switch(e){case 1:return n.setInt32(t,r,!0);case 2:return n.setInt64(t,r,!0);case 4:return n.setFloat32(t,r,!0);case 8:return n.setFloat64(t,r,!0);case 16:case 32:return n.setUint32(t,r,!0);case 128:return n.setInt8(t,r,!0);case 256:return n.setUint8(t,r,!0);case 512:return n.setInt16(t,r,!0);case 1024:return n.setUint16(t,r,!0);case 2048:return n.setUint32(t,r,!0);case 4096:return n.setUint64(t,r,!0);default:return n.setUint8(t,r,!0)}},get:(e,t,n)=>{switch(e){case 1:return n.getInt32(t,!0);case 2:return n.getInt64(t,!0);case 4:return n.getFloat32(t,!0);case 8:return n.getFloat64(t,!0);case 16:case 32:return n.getUint32(t,!0);case 128:return n.getInt8(t,!0);case 256:return n.getUint8(t,!0);case 512:return n.getInt16(t,!0);case 1024:return n.getUint16(t,!0);case 2048:return n.getUint32(t,!0);case 4096:return n.getUint64(t,!0);default:return n.getUint8(t,!0)}},sizeof:t}}),index_1=index$3.i32,index_2=index$3.i64,index_3=index$3.f32,index_4=index$3.f64,index_9=index$3.u8,index_12=index$3.u32,index_14=index$3.set,index_16=index$3.sizeof;const def={},opcodeMap=[],textMap={},___=null,opcode=(e,t,n,r,i,a,o)=>{const s={result:e,first:t,second:n,size:r,code:i,name:a,text:o};return def[a]=s,opcodeMap[i]=s,textMap[o]=s,s};opcode(___,___,___,0,0,"Unreachable","unreachable"),opcode(___,___,___,0,1,"Nop","nop"),opcode(___,___,___,0,2,"Block","block"),opcode(___,___,___,0,3,"Loop","loop"),opcode(___,___,___,0,4,"If","if"),opcode(___,___,___,0,5,"Else","else"),opcode(___,___,___,0,6,"Try","try"),opcode(___,___,___,0,7,"Catch","catch"),opcode(___,___,___,0,8,"Throw","throw"),opcode(___,___,___,0,9,"Rethrow","rethrow"),opcode(___,___,___,0,10,"CatchAll","catch_all"),opcode(___,___,___,0,11,"End","end"),opcode(___,___,___,0,12,"Br","br"),opcode(___,___,___,0,13,"BrIf","br_if"),opcode(___,___,___,0,14,"BrTable","br_table"),opcode(___,___,___,0,15,"Return","return"),opcode(___,___,___,0,16,"Call","call"),opcode(___,___,___,0,17,"CallIndirect","call_indirect"),opcode(___,___,___,0,26,"Drop","drop"),opcode(___,___,___,0,27,"Select","select"),opcode(___,___,___,0,32,"GetLocal","get_local"),opcode(___,___,___,0,33,"SetLocal","set_local"),opcode(___,___,___,0,34,"TeeLocal","tee_local"),opcode(___,___,___,0,35,"GetGlobal","get_global"),opcode(___,___,___,0,36,"SetGlobal","set_global"),opcode(index_1,index_1,___,4,40,"i32Load","i32.load"),opcode(index_2,index_1,___,8,41,"i64Load","i64.load"),opcode(index_3,index_1,___,4,42,"f32Load","f32.load"),opcode(index_3,index_1,___,8,43,"f64Load","f64.load"),opcode(index_1,index_1,___,1,44,"i32Load8S","i32.load8_s"),opcode(index_1,index_1,___,1,45,"i32Load8U","i32.load8_u"),opcode(index_1,index_1,___,2,46,"i32Load16S","i32.load16_s"),opcode(index_1,index_1,___,2,47,"i32Load16U","i32.load16_u"),opcode(index_2,index_1,___,1,48,"i64Load8S","i64.load8_s"),opcode(index_2,index_1,___,1,49,"i64Load8U","i64.load8_u"),opcode(index_2,index_1,___,2,50,"i64Load16S","i64.load16_s"),opcode(index_2,index_1,___,2,51,"i64Load16U","i64.load16_u"),opcode(index_2,index_1,___,4,52,"i64Load32S","i64.load32_s"),opcode(index_2,index_1,___,4,53,"i64Load32U","i64.load32_u"),opcode(___,index_1,index_1,4,54,"i32Store","i32.store"),opcode(___,index_1,index_2,8,55,"i64Store","i64.store"),opcode(___,index_1,index_3,4,56,"f32Store","f32.store"),opcode(___,index_1,index_3,8,57,"f64Store","f64.store"),opcode(___,index_1,index_1,1,58,"i32Store8","i32.store8"),opcode(___,index_1,index_1,2,59,"i32Store16","i32.store16"),opcode(___,index_1,index_2,1,60,"i64Store8","i64.store8"),opcode(___,index_1,index_2,2,61,"i64Store16","i64.store16"),opcode(___,index_1,index_2,4,62,"i64Store32","i64.store32"),opcode(index_1,___,___,0,63,"CurrentMemory","current_memory"),opcode(index_1,index_1,___,0,64,"GrowMemory","grow_memory"),opcode(index_1,___,___,0,65,"i32Const","i32.const"),opcode(index_2,___,___,0,66,"i64Const","i64.const"),opcode(index_3,___,___,0,67,"f32Const","f32.const"),opcode(index_3,___,___,0,68,"f64Const","f64.const"),opcode(index_1,index_1,___,0,69,"i32Eqz","i32.eqz"),opcode(index_1,index_1,index_1,0,70,"i32Eq","i32.eq"),opcode(index_1,index_1,index_1,0,71,"i32Ne","i32.ne"),opcode(index_1,index_1,index_1,0,72,"i32LtS","i32.lt_s"),opcode(index_1,index_1,index_1,0,73,"i32LtU","i32.lt_u"),opcode(index_1,index_1,index_1,0,74,"i32GtS","i32.gt_s"),opcode(index_1,index_1,index_1,0,75,"i32GtU","i32.gt_u"),opcode(index_1,index_1,index_1,0,76,"i32LeS","i32.le_s"),opcode(index_1,index_1,index_1,0,77,"i32LeU","i32.le_u"),opcode(index_1,index_1,index_1,0,78,"i32GeS","i32.ge_s"),opcode(index_1,index_1,index_1,0,79,"i32GeU","i32.ge_u"),opcode(index_1,index_2,___,0,80,"i64Eqz","i64.eqz"),opcode(index_1,index_2,index_2,0,81,"i64Eq","i64.eq"),opcode(index_1,index_2,index_2,0,82,"i64Ne","i64.ne"),opcode(index_1,index_2,index_2,0,83,"i64LtS","i64.lt_s"),opcode(index_1,index_2,index_2,0,84,"i64LtU","i64.lt_u"),opcode(index_1,index_2,index_2,0,85,"i64GtS","i64.gt_s"),opcode(index_1,index_2,index_2,0,86,"i64GtU","i64.gt_u"),opcode(index_1,index_2,index_2,0,87,"i64LeS","i64.le_s"),opcode(index_1,index_2,index_2,0,88,"i64LeU","i64.le_u"),opcode(index_1,index_2,index_2,0,89,"i64GeS","i64.ge_s"),opcode(index_1,index_2,index_2,0,90,"i64GeU","i64.ge_u"),opcode(index_1,index_3,index_3,0,91,"f32Eq","f32.eq"),opcode(index_1,index_3,index_3,0,92,"f32Ne","f32.ne"),opcode(index_1,index_3,index_3,0,93,"f32Lt","f32.lt"),opcode(index_1,index_3,index_3,0,94,"f32Gt","f32.gt"),opcode(index_1,index_3,index_3,0,95,"f32Le","f32.le"),opcode(index_1,index_3,index_3,0,96,"f32Ge","f32.ge"),opcode(index_1,index_3,index_3,0,97,"f64Eq","f64.eq"),opcode(index_1,index_3,index_3,0,98,"f64Ne","f64.ne"),opcode(index_1,index_3,index_3,0,99,"f64Lt","f64.lt"),opcode(index_1,index_3,index_3,0,100,"f64Gt","f64.gt"),opcode(index_1,index_3,index_3,0,101,"f64Le","f64.le"),opcode(index_1,index_3,index_3,0,102,"f64Ge","f64.ge"),opcode(index_1,index_1,___,0,103,"i32Clz","i32.clz"),opcode(index_1,index_1,___,0,104,"i32Ctz","i32.ctz"),opcode(index_1,index_1,___,0,105,"i32Popcnt","i32.popcnt"),opcode(index_1,index_1,index_1,0,106,"i32Add","i32.add"),opcode(index_1,index_1,index_1,0,107,"i32Sub","i32.sub"),opcode(index_1,index_1,index_1,0,108,"i32Mul","i32.mul"),opcode(index_1,index_1,index_1,0,109,"i32DivS","i32.div_s"),opcode(index_1,index_1,index_1,0,110,"i32DivU","i32.div_u"),opcode(index_1,index_1,index_1,0,111,"i32RemS","i32.rem_s"),opcode(index_1,index_1,index_1,0,112,"i32RemU","i32.rem_u"),opcode(index_1,index_1,index_1,0,113,"i32And","i32.and"),opcode(index_1,index_1,index_1,0,114,"i32Or","i32.or"),opcode(index_1,index_1,index_1,0,115,"i32Xor","i32.xor"),opcode(index_1,index_1,index_1,0,116,"i32Shl","i32.shl"),opcode(index_1,index_1,index_1,0,117,"i32ShrS","i32.shr_s"),opcode(index_1,index_1,index_1,0,118,"i32ShrU","i32.shr_u"),opcode(index_1,index_1,index_1,0,119,"i32Rotl","i32.rotl"),opcode(index_1,index_1,index_1,0,120,"i32Rotr","i32.rotr"),opcode(index_2,index_2,___,0,121,"i64Clz","i64.clz"),opcode(index_2,index_2,___,0,122,"i64Ctz","i64.ctz"),opcode(index_2,index_2,___,0,123,"i64Popcnt","i64.popcnt"),opcode(index_2,index_2,index_2,0,124,"i64Add","i64.add"),opcode(index_2,index_2,index_2,0,125,"i64Sub","i64.sub"),opcode(index_2,index_2,index_2,0,126,"i64Mul","i64.mul"),opcode(index_2,index_2,index_2,0,127,"i64DivS","i64.div_s"),opcode(index_2,index_2,index_2,0,128,"i64DivU","i64.div_u"),opcode(index_2,index_2,index_2,0,129,"i64RemS","i64.rem_s"),opcode(index_2,index_2,index_2,0,130,"i64RemU","i64.rem_u"),opcode(index_2,index_2,index_2,0,131,"i64And","i64.and"),opcode(index_2,index_2,index_2,0,132,"i64Or","i64.or"),opcode(index_2,index_2,index_2,0,133,"i64Xor","i64.xor"),opcode(index_2,index_2,index_2,0,134,"i64Shl","i64.shl"),opcode(index_2,index_2,index_2,0,135,"i64ShrS","i64.shr_s"),opcode(index_2,index_2,index_2,0,136,"i64ShrU","i64.shr_u"),opcode(index_2,index_2,index_2,0,137,"i64Rotl","i64.rotl"),opcode(index_2,index_2,index_2,0,138,"i64Rotr","i64.rotr"),opcode(index_3,index_3,index_3,0,139,"f32Abs","f32.abs"),opcode(index_3,index_3,index_3,0,140,"f32Neg","f32.neg"),opcode(index_3,index_3,index_3,0,141,"f32Ceil","f32.ceil"),opcode(index_3,index_3,index_3,0,142,"f32Floor","f32.floor"),opcode(index_3,index_3,index_3,0,143,"f32Trunc","f32.trunc"),opcode(index_3,index_3,index_3,0,144,"f32Nearest","f32.nearest"),opcode(index_3,index_3,index_3,0,145,"f32Sqrt","f32.sqrt"),opcode(index_3,index_3,index_3,0,146,"f32Add","f32.add"),opcode(index_3,index_3,index_3,0,147,"f32Sub","f32.sub"),opcode(index_3,index_3,index_3,0,148,"f32Mul","f32.mul"),opcode(index_3,index_3,index_3,0,149,"f32Div","f32.div"),opcode(index_3,index_3,index_3,0,150,"f32Min","f32.min"),opcode(index_3,index_3,index_3,0,151,"f32Max","f32.max"),opcode(index_3,index_3,index_3,0,152,"f32Copysign","f32.copysign"),opcode(index_3,index_3,index_3,0,153,"f32Abs","f64.abs"),opcode(index_3,index_3,index_3,0,154,"f32Neg","f64.neg"),opcode(index_3,index_3,index_3,0,155,"f32Ceil","f64.ceil"),opcode(index_3,index_3,index_3,0,156,"f32Floor","f64.floor"),opcode(index_3,index_3,index_3,0,157,"f32Trunc","f64.trunc"),opcode(index_3,index_3,index_3,0,158,"f32Nearest","f64.nearest"),opcode(index_3,index_3,index_3,0,159,"f32Sqrt","f64.sqrt"),opcode(index_3,index_3,index_3,0,160,"f64Add","f64.add"),opcode(index_3,index_3,index_3,0,161,"f64Sub","f64.sub"),opcode(index_3,index_3,index_3,0,162,"f64Mul","f64.mul"),opcode(index_3,index_3,index_3,0,163,"f64Div","f64.div"),opcode(index_3,index_3,index_3,0,164,"f64Min","f64.min"),opcode(index_3,index_3,index_3,0,165,"f64Max","f64.max"),opcode(index_3,index_3,index_3,0,166,"f64Copysign","f64.copysign"),opcode(index_1,index_2,___,0,167,"i32Wrapi64","i32.wrap/i64"),opcode(index_1,index_3,___,0,168,"i32TruncSf32","i32.trunc_s/f32"),opcode(index_1,index_3,___,0,169,"i32TruncUf32","i32.trunc_u/f32"),opcode(index_1,index_3,___,0,170,"i32TruncSf64","i32.trunc_s/f64"),opcode(index_1,index_3,___,0,171,"i32TruncUf64","i32.trunc_u/f64"),opcode(index_2,index_1,___,0,172,"i64ExtendSi32","i64.extend_s/i32"),opcode(index_2,index_1,___,0,173,"i64ExtendUi32","i64.extend_u/i32"),opcode(index_2,index_3,___,0,174,"i64TruncSf32","i64.trunc_s/f32"),opcode(index_2,index_3,___,0,175,"i64TruncUf32","i64.trunc_u/f32"),opcode(index_2,index_3,___,0,176,"i64TruncSf64","i64.trunc_s/f64"),opcode(index_2,index_3,___,0,177,"i64TruncUf64","i64.trunc_u/f64"),opcode(index_3,index_1,___,0,178,"f32ConvertSi32","f32.convert_s/i32"),opcode(index_3,index_1,___,0,179,"f32ConvertUi32","f32.convert_u/i32"),opcode(index_3,index_2,___,0,180,"f32ConvertSi64","f32.convert_s/i64"),opcode(index_3,index_2,___,0,181,"f32ConvertUi64","f32.convert_u/i64"),opcode(index_3,index_3,___,0,182,"f32Demotef64","f32.demote/f64"),opcode(index_3,index_1,___,0,183,"f64ConvertSi32","f64.convert_s/i32"),opcode(index_3,index_1,___,0,184,"f64ConvertUi32","f64.convert_u/i32"),opcode(index_3,index_2,___,0,185,"f64ConvertSi64","f64.convert_s/i64"),opcode(index_3,index_2,___,0,186,"f64ConvertUi64","f64.convert_u/i64"),opcode(index_3,index_3,___,0,187,"f64Promotef32","f64.promote/f32"),opcode(index_1,index_3,___,0,188,"i32Reinterpretf32","i32.reinterpret/f32"),opcode(index_2,index_3,___,0,189,"i64Reinterpretf64","i64.reinterpret/f64"),opcode(index_3,index_1,___,0,190,"f32Reinterpreti32","f32.reinterpret/i32"),opcode(index_3,index_2,___,0,191,"f32Reinterpreti64","f64.reinterpret/i64");const getTypecastOpcode=(e,t)=>{const n=e[0],r=t[0];if("i32"===e&&"i64"===t)return def.i32Wrapi64;if("i64"===e&&"i32"===t)return def.i64ExtendSi32;if("f32"===e&&"f64"===t)return def.f32Demotef64;if("f64"===e&&"f32"===t)return def.f64Promotef32;if("f"===n&&"i"===r)return def[e+"ConvertS"+t];if("i"===n&&"f"===r)return def[e+"TruncS"+t];throw new Error(`Unknown type conversion ${t} to ${e}`)},opcodeFromOperator=({type:e,value:t})=>{switch(t){case"+":return def[e+"Add"];case"-":return def[e+"Sub"];case"*":return def[e+"Mul"];case"/":return def[e+"DivS"]||def[e+"Div"];case"%":return def[e+"RemS"]||def[e+"RemU"];case"==":return def[e+"Eq"];case"!=":return def[e+"Ne"];case">":return def[e+"GtU"]||def[e+"Gt"];case"<":return def[e+"LtU"]||def[e+"Lt"];case"<=":return def[e+"LeU"]||def[e+"Le"];case">=":return def[e+"GeU"]||def[e+"Ge"];case"?":return def.If;case":":return def.Else;case"[":return def[e+"Load"];default:throw new Error(`No mapping from operator to opcode ${t}`)}};var slice=Array.prototype.slice,toArray=function(e){return slice.call(e)},tail=function(e){return slice.call(e,1)},createFn=function(e,t,n){var r=n-t.length;switch(r){case 0:return function(){return processInvocation(e,concatArgs(t,arguments),n)};case 1:return function(r){return processInvocation(e,concatArgs(t,arguments),n)};case 2:return function(r,i){return processInvocation(e,concatArgs(t,arguments),n)};case 3:return function(r,i,a){return processInvocation(e,concatArgs(t,arguments),n)};case 4:return function(r,i,a,o){return processInvocation(e,concatArgs(t,arguments),n)};case 5:return function(r,i,a,o,s){return processInvocation(e,concatArgs(t,arguments),n)};case 6:return function(r,i,a,o,s,d){return processInvocation(e,concatArgs(t,arguments),n)};case 7:return function(r,i,a,o,s,d,c){return processInvocation(e,concatArgs(t,arguments),n)};case 8:return function(r,i,a,o,s,d,c,p){return processInvocation(e,concatArgs(t,arguments),n)};case 9:return function(r,i,a,o,s,d,c,p,u){return processInvocation(e,concatArgs(t,arguments),n)};case 10:return function(r,i,a,o,s,d,c,p,u,_){return processInvocation(e,concatArgs(t,arguments),n)};default:return createEvalFn(e,t,r)}},concatArgs=function(e,t){return e.concat(toArray(t))},createEvalFn=function(fn,args,arity){var argList=makeArgList(arity),fnStr="false||function("+argList+"){ return processInvocation(fn, concatArgs(args, arguments)); }";return eval(fnStr)},makeArgList=function(e){for(var t=[],n=0;n<e;n+=1)t.push("a"+n.toString());return t.join(",")},trimArrLength=function(e,t){return e.length>t?e.slice(0,t):e},processInvocation=function(e,t,n){return(t=trimArrLength(t,n)).length===n?e.apply(null,t):createFn(e,t,n)},curry=function(e){return createFn(e,[],e.length)};curry.to=curry(function(e,t){return createFn(t,[],e)}),curry.adaptTo=curry(function(e,t){return curry.to(e,function(e){var n=tail(arguments).concat(e);return t.apply(this,n)})}),curry.adapt=function(e){return curry.adaptTo(e.length,e)};var curry_1$1=curry,NODE_ENV="production",invariant=function(e,t,n,r,i,a,o,s){if("production"!==NODE_ENV&&void 0===t)throw new Error("invariant requires an error message argument");if(!e){var d;if(void 0===t)d=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,r,i,a,o,s],p=0;(d=new Error(t.replace(/%s/g,function(){return c[p++]}))).name="Invariant Violation"}throw d.framesToPop=1,d}},invariant_1=invariant;const I32=127,I64=126,F32=125,F64=124,ANYFUNC=112,FUNC=96,getTypeString=e=>{switch(e){case I32:return"i32";case I64:return"i64";case F32:return"f32";case F64:return"f64";case FUNC:return"func";case ANYFUNC:return"anyfunc";default:return"?"}},FUNCTION_INDEX="function/index",POSTFIX="operator/postfix",LOCAL_INDEX="local/index",GLOBAL_INDEX="global/index",TABLE_INDEX="table/index",TYPE_CONST="type/const",TYPE_ARRAY="type/array",TYPE_USER="type/user",TYPE_OBJECT="type/object",OBJECT_SIZE="object/size",TYPE_CAST="type/cast",OBJECT_KEY_TYPES="object/key-types",make=(e,t)=>({type:t,payload:e}),get=(e,t)=>(invariant_1(t.meta,`Attemptend to access Metadata but it was undefined in node ${JSON.stringify(t)}`),t?t.meta.find(({type:t})=>t===e)||null:null),funcIndex=e=>({payload:e,type:FUNCTION_INDEX}),localIndex=e=>({payload:e,type:LOCAL_INDEX}),globalIndex=e=>({payload:e,type:GLOBAL_INDEX}),tableIndex=e=>({payload:e,type:TABLE_INDEX}),postfix=()=>({payload:!0,type:POSTFIX}),userType=e=>({payload:e,type:TYPE_USER}),objectType=e=>({payload:e,type:TYPE_OBJECT}),objectSize=e=>({payload:e,type:OBJECT_SIZE}),array=e=>({payload:e,type:TYPE_ARRAY}),constant$1=()=>({payload:!0,type:TYPE_CONST}),typeCast=e=>({payload:e,type:TYPE_CAST}),objectKeyTypes=e=>({payload:e,type:OBJECT_KEY_TYPES}),metadata={make:make,get:get,postfix:postfix,funcIndex:funcIndex,localIndex:localIndex,globalIndex:globalIndex,userType:userType,tableIndex:tableIndex,objectSize:objectSize,array:array,constant:constant$1,POSTFIX:POSTFIX,LOCAL_INDEX:LOCAL_INDEX,FUNCTION_INDEX:FUNCTION_INDEX,TABLE_INDEX:TABLE_INDEX,TYPE_ARRAY:TYPE_ARRAY,TYPE_CONST:TYPE_CONST,TYPE_USER:TYPE_USER,TYPE_OBJECT:TYPE_OBJECT,OBJECT_SIZE:OBJECT_SIZE},scopeOperation=curry_1$1((e,t)=>{const n=get(LOCAL_INDEX,t),r=get(GLOBAL_INDEX,t),i=n||r;invariant_1(i,`Unefined index for scope Operation. Possibly missing metadata. op: ${JSON.stringify(e)} node: ${JSON.stringify(t,null,2)}`);const a=n?e+"Local":e+"Global",o=[Number(i.payload)];return{kind:def[a],params:o}}),getConstOpcode=e=>{const t=e.type||"i32";return{kind:def[t+"Const"],params:[Number(e.value)]}},getType=e=>{switch(e){case"f32":return F32;case"f64":return F64;case"i32":case"Function":default:return I32}},generateValueType=e=>({mutable:get(TYPE_CONST,e)?0:1,type:getType(e.type)}),setInScope=scopeOperation("Set"),getInScope=scopeOperation("Get"),generateInit=e=>{const t=generateValueType(e),{Type:n,value:r}=e.params[0];if(n===Syntax_1.Constant)switch(t.type){case F32:case F64:t.init=parseFloat(r);break;case I32:case I64:default:t.init=parseInt(r)}return t},generateMemory=e=>{const t={max:0,initial:0};return walker({[Syntax_1.Pair]:({params:e})=>{const[{value:n},{value:r}]=e;t[n]=parseInt(r)}})(e),t};var _extends=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};const functionCall=(e,t,n)=>{const r=e.startNode(t),i=n[n.length-1];i&&i.Type!==Syntax_1.FunctionIdentifier&&(r.params=n.splice(-1));const a=n.splice(-1)[0],o=e.func.locals.find(e=>e.id===a.value),s=e.func.locals.findIndex(({id:e})=>e===a.value);let d=Syntax_1.FunctionCall,c=null;if(o&&s>-1)d=Syntax_1.IndirectFunctionCall,c=e.functions[a.meta[0].payload],r.params.push(a);else{if(!(c=e.functions.find(({id:e})=>e==a.value)))throw e.syntaxError(`Undefined function: ${a.value}`);r.meta.push(_extends({},c.meta[0]))}return invariant_1(c,`Undefined function ${a.value}`),r.type=c.result,e.endNode(r,d)},formatMetadata=e=>e.map(({type:e,payload:t})=>{let n="";return n="object"==typeof t?"...":JSON.stringify(t),`${e}(${n})`}).join(","),printNode=(e,t=0)=>{const n=`${e.type?"<"+e.type+">":""}`,r=formatMetadata(e.meta);let i=`${e.Type}${n} ${e.value} ${r}\n`;return i=i.padStart(i.length+2*t),e.params.forEach(e=>i+=printNode(e,t+1)),i},isBinaryMathExpression=e=>{switch(e.value){case"+":case"-":case"/":case"*":case"%":case"==":case">":case"<":case">=":case"<=":case"!=":return!0;default:return!1}},typeWeight=e=>{switch(e){case"i32":return 0;case"i64":return 1;case"f32":return 2;case"f64":return 3;default:return-1}},patchUnaryExpression=e=>mapNode({[Syntax_1.BinaryExpression]:e=>{const{params:t,value:n}=e;if(1===t.length){const[r]=t;if("-"===n)return _extends({},e,{value:"*",params:[r,_extends({},r,{value:"-1",Type:Syntax_1.Constant,params:[],meta:[]})]});if("=>"!==n&&"="!==n)return r}return e},[Syntax_1.Assignment]:e=>{const{params:t}=e;if(1===t.length){const[n,r]=t[0].params;return _extends({},e,{params:[n,_extends({},r,{Type:Syntax_1.BinaryExpression,value:"*",params:[r,_extends({},r,{value:"-1",Type:Syntax_1.Constant,params:[],meta:[]})]})]})}return e}})(e),balanceTypesInMathExpression=e=>{if(e.Type===Syntax_1.Pair)return patchTypeCasts(e);if(isBinaryMathExpression(e)){const t=patchTypeCasts(e);let n=null;t.params.forEach(({type:e})=>{typeWeight(n)<typeWeight(e)&&(n=e)}),invariant_1(n,"Expression missing type parameters %s",printNode(t));const r=t.params.map(e=>(invariant_1(e.type,"Undefiend type in expression %s",printNode(e)),e.type!==n?_extends({},e,{type:n,value:e.value,Type:Syntax_1.TypeCast,meta:[...e.meta,typeCast({to:n,from:e.type})],params:[e]}):e));return _extends({},t,{params:r,type:n})}return e},PRECEDENCE_PARAMS=-99,PRECEDENCE_COMMA=-2,PRECEDENCE_ADDITION=0,PRECEDENCE_SUBTRACTION=0,PRECEDENCE_MULTIPLY=1,PRECEDENCE_DIVIDE=1,PRECEDENCE_ASSIGNMENT=3,PRECEDENCE_FUNCTION_CALL=19,PRECEDENCE_KEY_VALUE_PAIR=-1,precedence={"(":PRECEDENCE_PARAMS,",":PRECEDENCE_COMMA,"+":PRECEDENCE_ADDITION,"-":PRECEDENCE_SUBTRACTION,"*":PRECEDENCE_MULTIPLY,"/":PRECEDENCE_DIVIDE,"==":2,"!=":2,"=":PRECEDENCE_ASSIGNMENT,"-=":PRECEDENCE_ASSIGNMENT,"+=":PRECEDENCE_ASSIGNMENT,"-=":PRECEDENCE_ASSIGNMENT,"+=":PRECEDENCE_ASSIGNMENT,":":4,"?":4,">":5,"<":5,":":PRECEDENCE_KEY_VALUE_PAIR},findTypeIndex=(e,t)=>t.Program.Types.findIndex(t=>{const n=t.params.length===e.params.length&&t.params.reduce((t,n,r)=>e.params[r]&&t&&n===getType(e.params[r].type),!0),r=t.result==e.result||e.result&&t.result===getType(e.result.type);return n&&r}),findFieldIndex=e=>(t,n)=>{let r=e.reduce((e,t)=>e?e[t]:e,t);return r?r.findIndex(e=>e.id===n.value):-1},findLocalIndex=findFieldIndex(["func","locals"]),findGlobalIndex=findFieldIndex(["globals"]),findFunctionIndex=findFieldIndex(["functions"]),findUserTypeIndex=findFieldIndex(["userTypes"]),getPrecedence=e=>e.type===Syntax_1.UnaryExpression?precedence["+"]:precedence[e.value],getAssociativty=e=>{switch(e.value){case"+":case"-":case"/":case"*":case":":return"left";case"=":case"-=":case"+=":case"--":case"++":case"?":return"right";default:return"left"}},nodeMetaType=e=>metadata.get(TYPE_USER,e)||metadata.get(TYPE_ARRAY,e),getMetaType=(e,t)=>{const n=findLocalIndex(e,t),r=findGlobalIndex(e,t);let i=null;if(null==(i=n>-1?e.func.locals[n]:e.globals[r]))throw e.syntaxError(`Undefined variable ${t.value}`);return nodeMetaType(i)},patchStringSubscript=(e,t,n)=>{if(t.type===TYPE_USER&&n[1].Type===Syntax_1.StringLiteral){const r=metadata.get(TYPE_OBJECT,t.payload);invariant_1(r,`Undefined object properties`);const{payload:i}=r,{value:a}=n[1],o=i[a];return[n[0],e.makeNode({value:o,type:"i32"},Syntax_1.Constant)]}return n},subscriptFromNode=(e,t,n)=>{if(n.type===TYPE_USER){const e=metadata.get(OBJECT_KEY_TYPES,n.payload);e&&(t.type=e.payload[t.params[1].value])}else t.type=n.payload;return t.params=patchStringSubscript(e,n,t.params),t.meta.push(n),e.endNode(t,Syntax_1.ArraySubscript)},ternary=(e,t,n)=>{const r=e.startNode(n[0]);return r.params=n,r.value=t.value,r.type=n[n.length-1].type,e.endNode(r,Syntax_1.TernaryExpression)},flattenSequence=e=>e.reduce((e,t)=>(t.Type===Syntax_1.Sequence?e.push.apply(e,flattenSequence(t.params)):e.push(t),e),[]),sequence=(e,t,n)=>{const r=e.startNode(n[0]);return r.value=t.value,r.params=flattenSequence(n),e.endNode(r,Syntax_1.Sequence)},operator=(e,t,n)=>{const r=t.pop();switch(r.value){case"?":return ternary(e,r,n.splice(-2));case",":return sequence(e,r,n.slice(-2));case"{":return objectLiteral(e,r,n.splice(-1));default:return r.type===Syntax_1.FunctionCall?functionCall(e,r,n):binary(e,r,n.splice(-2))}},EXTERN_FUNCTION=0,EXTERN_TABLE=1,EXTERN_MEMORY=2,EXTERN_GLOBAL=3,generateElement=e=>({functionIndex:e}),generateImport=e=>{const t=e.module;return e.fields.map(({id:e,nativeType:n,typeIndex:r,global:i,kind:a})=>(a=a||n&&EXTERN_GLOBAL||EXTERN_FUNCTION,{module:t,field:e,global:i,kind:a,typeIndex:r}))},writeFunctionPointer=(e,t)=>{e.Program.Element.length||e.Program.Imports.push.apply(e.Program.Imports,generateImport({module:"env",fields:[{id:"table",kind:EXTERN_TABLE}]}));const n=e.Program.Element.findIndex(e=>e.functionIndex===t);return n<0?(e.Program.Element.push(generateElement(t)),Boolean(e.Program.Element.length-1)):n},maybeIdentifier=e=>{const t=e.startNode(),n=findLocalIndex(e,e.token),r=findGlobalIndex(e,e.token),i=findFunctionIndex(e,e.token),a=findUserTypeIndex(e,e.token);let o=Syntax_1.Identifier;if(-1!==n)t.type=e.func.locals[n].type,t.meta.push(metadata.localIndex(n));else if(-1!==r)t.type=e.globals[r].type,t.meta.push(metadata.globalIndex(r));else if(-1!==i&&"("!==e.stream.peek().value)t.type="i32",o=Syntax_1.FunctionPointer,t.meta.push(metadata.tableIndex(writeFunctionPointer(e,i)));else if(-1!==a&&"("!==e.stream.peek().value)t.type="i32",o=Syntax_1.Type;else if(-1==i)throw e.syntaxError(`Undefined variable name ${e.token.value}`);return e.diAssoc="left",e.endNode(t,o)},last=e=>e[e.length-1],valueIs=e=>t=>t.value===e,isLBracket=valueIs("("),isLSqrBracket=valueIs("["),isTStart=valueIs("?"),isBlockStart=valueIs("{"),predicate=(e,t)=>";"!==e.value&&t>0,expression=(e,t="i32",n=predicate)=>{const r=[],i=[];let a=1,o=!1,s=!1;const d=()=>i.push(operator(e,r,i)),c=e=>{let t=last(r);for(;t&&!e(t);)d(),t=last(r)},p=(e,t)=>{let n=null;for(;(n=last(r))&&n.Type!==Syntax_1.Sequence&&getPrecedence(n)>=e&&"left"===getAssociativty(n)&&(","!==t||n.type!==Syntax_1.FunctionCall);)d()},u=()=>{switch(e.token.value){case"(":if(a++,o){last(i).Type=Syntax_1.FunctionIdentifier,p(PRECEDENCE_FUNCTION_CALL),r.push(_extends({},e.token,{type:Syntax_1.FunctionCall})),e.next();const t=expression(e);return t&&i.push(t),!1}"?"===e.token.value&&(s=!0),r.push(e.token);break;case"[":a++,r.push(e.token);break;case"]":a--,c(isLSqrBracket),d();break;case")":{if(--a<1)return!1;c(isLBracket);const e=last(r);e&&e.type===Syntax_1.FunctionCall?d():a>0&&r.pop();break}case"{":a++,r.push(e.token);break;case"}":if(--a<1)return!1;c(isBlockStart),d();break;default:if(":"===e.token.value&&s){c(isTStart),s=!1;break}p(getPrecedence(e.token),e.token.value),r.push(e.token)}};for(;e.token&&n(e.token,a);)(()=>{switch(e.token.type){case Syntax_1.Constant:o=!1,i.push(parseConstant(e));break;case Syntax_1.Identifier:o=!0,i.push(maybeIdentifier(e));break;case Syntax_1.StringLiteral:o=!1,i.push(stringLiteral(e));break;case Syntax_1.Type:o=!1,i.push(builtInType(e));break;case Syntax_1.UnaryExpression:o=!1,p(getPrecedence(e.token),e.token.value),r.push(e.token);break;case Syntax_1.Punctuator:const t=u();if(null!=t)return t;o=!1}return!0})()&&e.next();for(;r.length;)d();return i.pop()},generate=(e,t)=>{e.func?(t.meta.push(metadata.localIndex(e.func.locals.length)),e.func.locals.push(t)):"Memory"===t.type?e.Program.Memory.push(generateMemory(t)):(t.meta.push(metadata.globalIndex(e.Program.Globals.length)),e.Program.Globals.push(generateInit(t)),e.globals.push(t))},declaration=e=>{const t=e.startNode();if("const"===e.token.value&&t.meta.push(metadata.constant()),!e.eat(["const","let","function"]))throw e.unexpectedValue(["const","let","function"]);t.id=e.expect(null,Syntax_1.Identifier).value,e.expect([":"]);const n=findUserTypeIndex(e,e.token);if(-1!==n?(t.type="i32",t.meta.push(metadata.userType(e.userTypes[n])),e.eat(null,Syntax_1.Identifier)):t.type=e.expect(null,Syntax_1.Type).value,e.eat(["["])&&e.eat(["]"])&&(t.meta.push(metadata.array(t.type)),t.type="i32"),e.eat(["="])&&t.params.push(expression(e,t.type)),t.const&&!t.init)throw e.syntaxError("Constant value must be initialized");return generate(e,t),e.endNode(t,Syntax_1.Declaration)},getType$1=e=>{switch(e){case"f32":return F32;case"f64":return F64;case"i64":return I64;case"i32":case"Function":default:return I32}},generateImplicitFunctionType=({params:e,id:t,result:n})=>({params:e.map(({type:e})=>getType$1(e)),result:n&&"void"!==n?getType$1(n):null,id:t}),mergeBlock=(e,t)=>(Array.isArray(t)?e=[...e,...t]:e.push(t),e),generateFunctionCall=(e,t)=>{const n=e.params.map(mapSyntax(t)).reduce(mergeBlock,[]),r=get(FUNCTION_INDEX,e);return invariant_1(r,`Undefined function index for node: ${JSON.stringify(e)}`),n.push({kind:def.Call,params:[r.payload.functionIndex]}),n},generateIndirectFunctionCall=(e,t)=>{const n=e.params.map(mapSyntax(t)).reduce(mergeBlock,[]);return n.push({kind:def.CallIndirect,params:[e.typeIndex,{kind:def.Nop,params:[]}]}),n},generateBinaryExpression=(e,t)=>{const n=e.params.map(mapSyntax(t)).reduce(mergeBlock,[]);return n.push({kind:opcodeFromOperator(e)}),n},generateTernary=(e,t)=>{const n=mapSyntax(t),r=e.params[1],i=e.params.slice(0,1).map(n).reduce(mergeBlock,[]);return i.push({kind:opcodeFromOperator(e),valueType:generateValueType(e)}),i.push.apply(i,r.params.slice(0,1).map(n).reduce(mergeBlock,[])),i.push({kind:opcodeFromOperator({value:":"})}),i.push.apply(i,r.params.slice(-1).map(n).reduce(mergeBlock,[])),i.push({kind:def.End}),i},generateIf=(e,t)=>{const n=mapSyntax(t),r=[e.expr].map(n).reduce(mergeBlock,[]);return r.push({kind:def.If,params:[64]}),r.push.apply(r,e.then.map(n).reduce(mergeBlock,[])),e.else.length&&(r.push({kind:def.Else}),r.push.apply(r,e.else.map(n).reduce(mergeBlock,[]))),r.push({kind:def.End}),r},generateFunctionPointer=e=>{const t=get(TABLE_INDEX,e);return invariant_1(t,`Cannot generate function pointer for node: ${JSON.stringify(e)}`),{kind:def.i32Const,params:[t.payload]}},generateReturn=e=>{const t={postfix:[]},n=e.params.map(mapSyntax(t)).reduce(mergeBlock,[]);return n.push({kind:def.Return}),t.postfix.length,n},generateExpression=(e,t)=>[e].map(mapSyntax(t)).reduce(mergeBlock,[]),generateDeclaration=(e,t)=>{let n=[];const r=e.params[0];return r&&(r.type=e.type,n.push.apply(n,generateExpression(r)),n.push({kind:def.SetLocal,params:[get(LOCAL_INDEX,e).payload]})),t.locals.push(generateValueType(e)),n},generateArraySubscript=(e,t)=>{const n=nodeMetaType(e);invariant_1(n,`Cannot generate subscript on an non-indexable node ${JSON.stringify(e)}`);const r=e.params.map(mapSyntax(t)).reduce(mergeBlock,[]);n.type===TYPE_ARRAY&&r.push.apply(r,[{kind:def.i32Const,params:[4]},{kind:def.i32Mul,params:[]}]),r.push({kind:def.i32Add,params:[]});const i=e.type||"i32";return r.push({kind:def[i+"Load"],params:[2,0]}),r},generateAssignment=e=>{const t={postfix:[]},n=e.params.slice(1).map(mapSyntax(t)).reduce(mergeBlock,[]);return n.push(setInScope(e.params[0])),t.postfix.reduce(mergeBlock,n)},generateMemoryAssignment=(e,t)=>{const n=e.params[0],r=nodeMetaType(n),i=e.params[0].params.map(mapSyntax(t)).reduce(mergeBlock,[]);return r.type===TYPE_ARRAY&&i.push.apply(i,[{kind:def.i32Const,params:[4]},{kind:def.i32Mul,params:[]}]),i.push({kind:def.i32Add,params:[]}),i.push.apply(i,e.params.slice(1).map(mapSyntax(t)).reduce(mergeBlock,[])),i.push({kind:def[e.type+"Store"],params:[2,0]}),i},generateLoop=(e,t)=>{const n=[],r=mapSyntax(t),i={">":"<=","<":">=",">=":"<","<=":">","==":"!=","!=":"=="},a=e.params.slice(1,2);a[0].value=i[a[0].value];const o=e.params.slice(2,3);return n.push.apply(n,e.params.slice(0,1).map(r).reduce(mergeBlock,[])),n.push({kind:def.Block,params:[64]}),n.push({kind:def.Loop,params:[64]}),n.push.apply(n,a.map(r).reduce(mergeBlock,[])),n.push({kind:def.BrIf,params:[1]}),n.push.apply(n,e.body.map(r).reduce(mergeBlock,[])),n.push.apply(n,o.map(r).reduce(mergeBlock,[])),n.push({kind:def.Br,params:[0]}),n.push({kind:def.End}),n.push({kind:def.End}),n},generateSequence=(e,t)=>e.params.map(mapSyntax(t)).reduce(mergeBlock,[]),generateTypecast=(e,t)=>{const n=get(TYPE_CAST,e);invariant_1(n,`Cannot generate typecast for node: ${JSON.stringify(e)}`);const{to:r,from:i}=n.payload;return[...e.params.map(mapSyntax(t)).reduce(mergeBlock,[]),{kind:getTypecastOpcode(r,i),params:[]}]},generateTypecast$2=()=>({kind:def.Br,params:[2]}),syntaxMap={[Syntax_1.FunctionCall]:generateFunctionCall,[Syntax_1.IndirectFunctionCall]:generateIndirectFunctionCall,[Syntax_1.Constant]:getConstOpcode,[Syntax_1.BinaryExpression]:generateBinaryExpression,[Syntax_1.TernaryExpression]:generateTernary,[Syntax_1.IfThenElse]:generateIf,[Syntax_1.Identifier]:getInScope,[Syntax_1.FunctionIdentifier]:getInScope,[Syntax_1.FunctionPointer]:generateFunctionPointer,[Syntax_1.ReturnStatement]:generateReturn,[Syntax_1.Declaration]:generateDeclaration,[Syntax_1.ArraySubscript]:generateArraySubscript,[Syntax_1.Assignment]:generateAssignment,[Syntax_1.MemoryAssignment]:generateMemoryAssignment,[Syntax_1.Import]:generateImport,[Syntax_1.Loop]:generateLoop,[Syntax_1.Break]:generateTypecast$2,[Syntax_1.Sequence]:generateSequence,[Syntax_1.TypeCast]:generateTypecast,[Syntax_1.Noop]:generateNoop},mapSyntax=curry_1$1((e,t)=>{const n=syntaxMap[t.Type];if(!n){const e=t.id||t.value||t.operator&&t.operator.value;throw new Error(`Unexpected Syntax Token ${t.Type} : ${e}`)}const r=n(t,e);return Array.isArray(r)&&r.forEach((e,n)=>invariant_1(e.kind,`Unknown opcode generated in block index %s %s. \nOperand: \n%s`,n,JSON.stringify(e),printNode(t))),r}),generateCode=e=>{invariant_1(e.body,`Cannot generate code for function without body`);const t={code:[],locals:[]},n=e.body.map(mapSyntax(t));return n&&(t.code=n.reduce(mergeBlock,[])),t},last$1=e=>e[e.length-1],param=e=>{const t=e.startNode();t.id=e.expect(null,Syntax_1.Identifier).value,e.expect([":"]);const n=e.token.value;if(e.eat(null,Syntax_1.Identifier)){if(t.typePointer=e.Program.Types.find(({id:e})=>e===n),null==t.typePointer)throw e.syntaxError("Undefined Type",n);t.type="i32"}else t.type=e.expect(null,Syntax_1.Type).value;return t.isParam=!0,e.eat([","]),e.endNode(t,Syntax_1.Param)},paramList=e=>{const t=[];for(e.expect(["("]);")"!==e.token.value;)t.push(param(e));return e.expect([")"]),t},maybeFunctionDeclaration=e=>{const t=e.startNode();if(!e.eat(["function"]))return declaration(e);e.func=t,t.func=!0,t.id=e.expect(null,Syntax_1.Identifier).value,t.params=paramList(e),t.locals=[...t.params],e.expect([":"]),t.result=e.expect(null,Syntax_1.Type).value,t.result="void"===t.result?null:t.result;const n=findTypeIndex(t,e);-1!==n?t.typeIndex=n:(t.typeIndex=e.Program.Types.length,e.Program.Types.push(generateImplicitFunctionType(t))),t.meta=[make({get functionIndex(){return t.functionIndex+e.functionImports.length}},FUNCTION_INDEX)],t.functionIndex=e.Program.Functions.length,e.Program.Functions.push(t.typeIndex),e.functions.push(t),e.expect(["{"]),t.body=[];let r=null;for(;e.token&&"}"!==e.token.value;)(r=statement(e))&&t.body.push(r);const i=last$1(t.params);if(i&&t.type){if("void"===t.type&&i.Type===Syntax_1.ReturnStatement)throw e.syntaxError("Unexpected return value in a function with result : void");if("void"!==t.type&&i.Type!==Syntax_1.ReturnStatement)throw e.syntaxError("Expected a return value in a function with result : "+t.result)}else t.result;return e.Program.Code.push(generateCode(t)),e.expect(["}"]),e.func=null,e.endNode(t,Syntax_1.FunctionDeclaration)},generateExport=e=>e&&!e.func&&e.params.length?{index:get(GLOBAL_INDEX,e).payload,kind:EXTERN_GLOBAL,field:e.id}:e&&e.func?{get index(){return get(FUNCTION_INDEX,e).payload.functionIndex},kind:EXTERN_FUNCTION,field:e.id}:void invariant_1(!1,"Unknown Export"),_export=e=>{const t=e.startNode();e.eat(["export"]);const n=maybeFunctionDeclaration(e);if(!n.func&&0===n.params.length)throw e.syntaxError("Exports must have a value");return e.Program.Exports.push(generateExport(n)),t.decl=n,e.endNode(t,Syntax_1.Export),t},field=e=>{const t={id:e.expect(null,Syntax_1.Identifier).value};e.expect([":"]);const n=e.token.value;if(e.eat(null,Syntax_1.Type))"Memory"===n?t.kind=EXTERN_MEMORY:t.global=getType(n);else if(e.eat(null,Syntax_1.Identifier)){t.typeIndex=e.Program.Types.findIndex(({id:e})=>e===n),-1===t.typeIndex&&(t.typeIndex=e.Program.Types.length,e.Program.Types.push({id:n,params:[],hoist:n=>{e.Program.Types[t.typeIndex]=generateType(n)}}));const r=e.Program.Functions.length;t.meta=[make({functionIndex:r},FUNCTION_INDEX)],t.functionIndex=r,e.Program.Functions.push(null),e.functions.push(t)}return t},fieldList=e=>{const t=[];for(;"}"!==e.token.value;){const n=field(e);n&&(t.push(n),e.eat([","]))}return e.expect(["}"]),t},_import=e=>{const t=e.startNode();if(e.eat(["import"]),!e.eat(["{"]))throw e.syntaxError("expected {");return t.fields=fieldList(e),e.expect(["from"]),t.module=e.expect(null,Syntax_1.StringLiteral).value,t.module=t.module.substring(1,t.module.length-1),e.Program.Imports.push.apply(e.Program.Imports,generateImport(t)),e.endNode(t,Syntax_1.Import),t},hoistTypeMaybe=(e,t)=>{const n=e.Program.Types.find(({id:e,hoist:n})=>e===t.id&&n);n&&n.hoist(t),null==get(TYPE_OBJECT,t)&&e.Program.Types.push(generateType(t))},getByteOffsetsAndSize=e=>{const t={},n={};let r=0;return walker({[Syntax_1.Pair]:e=>{const{value:i}=e.params[0],{value:a}=e.params[1];switch(invariant_1(null==t[i],`Duplicate key ${i} not allowed in object type`),n[i]=a,t[i]=r,a){case"i32":case"f32":r+=4;break;case"i64":case"f64":r+=8;break;default:r+=4}}})(e),[t,r,n]},paramList$1=e=>{e.expect(["("]);const t=[];let n=null;for(;e.token.value&&")"!==e.token.value;)(n=expression(e,"i32"))&&(t.push(n),e.eat([";"]));return e.expect([")"]),t},forLoop=e=>{const t=e.startNode();e.eat(["for"]),t.params=paramList$1(e),e.expect(["{"]);const n=[];let r=null;for(;e.token&&"}"!==e.token.value;)(r=statement(e))&&n.push(r);return e.expect(["}"]),e.endNode(_extends({},t,{body:n}),Syntax_1.Loop)},whileLoop=e=>{const t=e.startNode();e.eat(["while"]),e.expect(["("]),t.params=[e.makeNode({},Syntax_1.Noop),expression(e,"i32")],e.expect([")"]),e.expect(["{"]);const n=[];let r=null;for(;e.token&&"}"!==e.token.value;)(r=statement(e))&&n.push(r);return e.expect(["}"]),e.endNode(_extends({},t,{body:n}),Syntax_1.Loop)},returnStatement=e=>{const t=e.startNode();if(!e.func)throw e.syntaxError("Return statement is only valid inside a function");e.expect(["return"]);const n=expression(e);if(n.type&&e.func.result!==n.type)throw e.syntaxError(`Return type mismatch ${n.type} ${e.func.result}`);return!n.type&&e.func.result&&(n.type=e.func.result),t.params.push(n),e.endNode(t,Syntax_1.ReturnStatement)},ifThenElse=e=>{const t=_extends({},e.startNode(e.token),{then:[],else:[]});if(e.eat(["if"]),e.expect(["("]),t.expr=expression(e,"i32"),e.expect([")"]),e.eat(["{"])){let n=null;for(;e.token&&"}"!==e.token.value;)(n=statement(e))&&t.then.push(n);if(e.expect(["}"]),e.eat(["else"])){for(e.expect(["{"]);e.token&&"}"!==e.token.value;)(n=statement(e))&&t.else.push(n);e.expect(["}"])}}else t.then.push(statement(e)),e.expect([";"]),e.eat(["else"])&&t.else.push(statement(e));return e.endNode(t,Syntax_1.IfThenElse)},variableSize=e=>{const t=nodeMetaType(e);if(null!=t){invariant_1(t.type===TYPE_USER,`sizeof is not-supported on type supplied ${t.type}`);const e=get(OBJECT_SIZE,t.payload);return invariant_1(e,`Object size information is missing`),e.payload}switch(e.type){case"i32":case"f32":return"4";case"i64":case"f64":return"8";default:return"4"}},keyword$1=e=>{switch(e.token.value){case"let":case"const":return declaration(e);case"function":return maybeFunctionDeclaration(e);case"export":return _export(e);case"import":return _import(e);case"type":return typeParser(e);case"if":return ifThenElse(e);case"for":return forLoop(e);case"while":return whileLoop(e);case"return":return returnStatement(e);case"sizeof":return sizeof(e);case"break":return breakParser(e);default:throw e.unsupported()}},memoryStore=e=>{const t=expression(e,"i32");invariant_1(t.params.length>0,"Memory Store expression could not be parsed");const n=t.params[0].type;return e.endNode(_extends({},t,{type:n}),Syntax_1.MemoryAssignment)},statement=e=>{switch(e.token.type){case Syntax_1.Keyword:return keyword$1(e);case Syntax_1.Punctuator:if(e.eat([";"]))return null;case Syntax_1.Identifier:return maybeAssignment(e);default:throw e.unknown(e.token)}},generateErrorString=(e,t,n,r,i,a)=>{const{line:o,col:s}=n.start,{col:d}=n.end;return`\n${r}\n${new Array(d-s+1).join("^").padStart(d," ")} ${t}\n${e}\n  at ${a} (${i}:${o}:${s})`};class Context{constructor(e){Object.assign(this,_extends({body:[],diAssoc:"right",globals:[],functions:[],lines:[],functionImports:[],functionImportsLength:0,userTypes:[]},e)),this.Program={body:[],Types:[],Code:[],Exports:[],Imports:[],Globals:[],Element:[],Functions:[],Memory:[]}}syntaxError(e,t){return new SyntaxError(generateErrorString(e,t||"",this.token,this.lines[this.token.start.line-1],this.filename||"unknown",this.func&&this.func.id||"global"))}unexpectedValue(e){return this.syntaxError(`Expected: ${Array.isArray(e)?e.join("|"):e}`,"Unexpected value")}unexpected(e){return this.syntaxError(`Expected: ${Array.isArray(e)?e.join(" | "):JSON.stringify(e)}`,`Unexpected token ${this.token.type}`)}unknown({value:e}){return this.syntaxError("Unknown token",e)}unsupported(){return this.syntaxError("Language feature not supported",this.token.value)}expect(e,t){const n=this.token;if(!this.eat(e,t))throw e?this.unexpectedValue(e):this.unexpected(t);return n}next(){this.token=this.stream.next()}eat(e,t){return e?!!e.includes(this.token.value)&&(this.next(),!0):this.token.type===t&&(this.next(),!0)}startNode(e=this.token){return{Type:"",value:e.value,range:[e.start],meta:[],params:[]}}endNode(e,t){const n=this.token||this.stream.last();return _extends({},e,{Type:t,range:e.range.concat(n.end)})}makeNode(e,t){return this.endNode(_extends({},this.startNode(),e),t)}}class Parser{constructor(e,t=[]){this.context=new Context({body:[],diAssoc:"right",stream:e,token:e.next(),lines:t,globals:[],functions:[],filename:"unknown.walt"})}parse(){const e=this.context;if(!e.stream||!e.stream.length)return{};const t=e.Program;for(;e.stream.peek();){const n=statement(e);n&&t.body.push(n)}return t}}class TokenStream{constructor(e=[]){this.length=e.length,this.tokens=e,this.pos=0}next(){return this.tokens[this.pos++]}peek(){return this.tokens[this.pos]}last(){return this.tokens[this.length-1]}}class OutputStream{constructor(){this.data=[],this.size=0}push(e,t,n=""){let r=0;switch(e){case"varuint7":case"varuint32":case"varint7":case"varint1":r=(t=this.encode(t)).length,invariant_1(r,`Cannot write a value of size ${r}`);break;case"varint32":r=(t=this.encodeSigned(t)).length,invariant_1(r,`Cannot write a value of size ${r}`);break;default:r=index_16[e],invariant_1(r,`Cannot write a value of size ${r}, type ${e}`)}return this.data.push({type:e,value:t,debug:n}),this.size+=r,this}encode(e){const t=[];for(;;){const n=127&e;if(0==(e>>>=7)){t.push(n);break}t.push(128|n)}return t}encodeSigned(e){const t=[];for(;;){const n=127&e,r=64&n;if((e>>>=7)<0&&(e|=-1<<25),0===e&&!r||-1===e&&r){t.push(n);break}t.push(128|n)}return t}buffer(){const e=new ArrayBuffer(this.size),t=new DataView(e);let n=0;return this.data.forEach(({type:e,value:r})=>{Array.isArray(r)?r.forEach(e=>index_14(index_9,n++,t,e)):(index_14(e,n,t,r),n+=index_16[e])}),e}write(e){return e&&(this.data=this.data.concat(e.data),this.size+=e.size),this}}const VERSION=1,MAGIC=1836278016,varuint32="varuint32",varint7="varint7",varint1="varint1",varint32="varint32",emit$1=e=>{const t=(new OutputStream).push(varuint32,e.length,"entry count");return e.forEach(({module:e,field:n,kind:r,global:i,typeIndex:a})=>{switch(emitString(t,e,"module"),emitString(t,n,"field"),r){case EXTERN_GLOBAL:t.push(index_9,r,"Global"),t.push(index_9,i,getTypeString(i)),t.push(index_9,0,"immutable");break;case EXTERN_FUNCTION:t.push(index_9,r,"Function"),t.push(varuint32,a,"type index");break;case EXTERN_TABLE:t.push(index_9,r,"Table"),t.push(index_9,ANYFUNC,"function table types"),t.push(varint1,0,"has max value"),t.push(varuint32,0,"iniital table size");break;case EXTERN_MEMORY:t.push(index_9,r,"Memory"),t.push(varint1,0,"has no max"),t.push(varuint32,1,"iniital memory size(PAGES)")}}),t},emit$2=e=>{const t=new OutputStream;return t.push(varuint32,e.length,"count"),e.forEach(({field:e,kind:n,index:r})=>{emitString(t,e,"field"),t.push(index_9,n,"Global"),t.push(varuint32,r,"index")}),t},encode=(e,{type:t,init:n,mutable:r})=>{if(e.push(index_9,t,getTypeString(t)),e.push(index_9,r,"mutable"),Array.isArray(n))n.forEach(({kind:t,params:n})=>{e.push(index_9,t.code,t.text),n.forEach(t=>e.push(varuint32,t,`value (${t})`))});else switch(t){case I32:e.push(index_9,def.i32Const.code,def.i32Const.text),e.push(varint32,n,`value (${n})`);break;case F32:e.push(index_9,def.f32Const.code,def.f32Const.text),e.push(index_3,n,`value (${n})`);break;case F64:e.push(index_9,def.f64Const.code,def.f64Const.text),e.push(index_4,42.6,`value (${n})`)}e.push(index_9,def.End.code,"end")},emit$3=e=>{const t=new OutputStream;return t.push(varuint32,e.length,"count"),e.forEach(e=>encode(t,e)),t},emit$4=e=>{e=e.filter(e=>null!==e);const t=new OutputStream;return t.push(varuint32,e.length,"count"),e.forEach(e=>t.push(varuint32,e,"type index")),t},writer=({type:e,label:t,emiter:n})=>r=>{const i=r[t];if(!i||!i.length)return null;const a=(new OutputStream).push(index_9,e,t+" section"),o=n(i);return a.push(varuint32,o.size,"size"),a.write(o),a},emitElement=e=>({functionIndex:t},n)=>{e.push(varuint32,0,"table index"),e.push(index_9,def.i32Const.code,"offset"),e.push(varuint32,n,""),e.push(index_9,def.End.code,"end"),e.push(varuint32,1,"number of elements"),e.push(varuint32,t,"function index")},emit$5=e=>{const t=new OutputStream;return t.push(varuint32,e.length,"count"),e.forEach(emitElement(t)),t},emitType=(e,{params:t,result:n})=>{e.push(varint7,FUNC,"func type"),e.push(varuint32,t.length,"parameter count"),t.forEach(t=>e.push(varint7,t,"param")),n?(e.push(varint1,1,"result count"),e.push(varint7,n,`result type ${getTypeString(n)}`)):e.push(varint1,0,"result count")},emit$6=e=>{const t=new OutputStream;return t.push(varuint32,e.length,"count"),e.forEach(e=>emitType(t,e)),t},emitLocal=(e,t)=>{null==t.isParam&&(e.push(varuint32,1,"number of locals of following type"),e.push(varint7,t.type,`${getTypeString(t.type)}`))},emitFunctionBody=(e,{locals:t,code:n})=>{const r=new OutputStream;n.forEach(({kind:e,params:t,valueType:n})=>{r.push(index_9,e.code,e.text),n&&(r.push(index_9,n.type,"result type"),r.push(index_9,n.mutable,"mutable")),(t||[]).forEach(t=>{let n=varuint32,i="i32.literal";if(e.code>=40&&e.code<=62)n=varuint32,i="memory_immediate";else switch(e.result){case index_9:n=index_9;break;case index_4:n=index_4,i="f64.literal";break;case index_3:n=index_3,i="f32.literal";break;case index_1:n=varint32,i="i32.literal";break;default:n=varuint32}r.push(n,t,`${i}`)})});const i=new OutputStream;t.forEach(e=>emitLocal(i,e)),e.push(varuint32,r.size+i.size+2,"body size in bytes"),e.push(varuint32,t.length,"locals count"),e.write(i),e.write(r),e.push(index_9,def.End.code,"end")},emit$7=e=>{const t=new OutputStream;return t.push(varuint32,e.length,"function count"),e.forEach(e=>emitFunctionBody(t,e)),t},emitEntry=(e,t)=>{e.push(varint1,t.max?1:0,"has no max"),e.push(varuint32,t.initial,"initial memory size(PAGES)"),t.max&&e.push(varuint32,t.max,"max memory size(PAGES)")},emit$8=e=>{const t=new OutputStream;return t.push(varuint32,e.length,"count"),e.forEach(e=>emitEntry(t,e)),t},SECTION_TYPE=1,SECTION_IMPORT=2,SECTION_FUNCTION=3,SECTION_MEMORY=5,SECTION_GLOBAL=6,SECTION_EXPORT=7,SECTION_ELEMENT=9,SECTION_CODE=10;var section={type:writer({type:SECTION_TYPE,label:"Types",emiter:emit$6}),imports:writer({type:SECTION_IMPORT,label:"Imports",emiter:emit$1}),function:writer({type:SECTION_FUNCTION,label:"Functions",emiter:emit$4}),memory:writer({type:SECTION_MEMORY,label:"Memory",emiter:emit$8}),exports:writer({type:SECTION_EXPORT,label:"Exports",emiter:emit$2}),globals:writer({type:SECTION_GLOBAL,label:"Globals",emiter:emit$3}),element:writer({type:SECTION_ELEMENT,label:"Element",emiter:emit$5}),code:writer({type:SECTION_CODE,label:"Code",emiter:emit$7})};const _debug=(e,t=0,n)=>{let r=0;return e.data.slice(t,n).map(({type:t,value:n,debug:i})=>{let a;const o=`${r.toString(16).padStart(8,"0").padEnd(e.data.length.toString().length+1)}: ${a=Array.isArray(n)?n.map(e=>e.toString(16)).join().padStart(16):n.toString(16).padStart(16)} ; ${i}`;return r+=index_16[t]||n.length,o}).join("\n")+"\n ============ fin ============="},debug=_debug,getAst=e=>{const t=new Stream(e),n=new Tokenizer(t),r=new TokenStream(n.parse());return new Parser(r,t.lines).parse()},getIR=e=>emit(getAst(e)),compile=e=>getIR(e).buffer();exports.debug=debug,exports.getAst=getAst,exports.getIR=getIR,exports.default=compile,Object.defineProperty(exports,"__esModule",{value:!0})});
